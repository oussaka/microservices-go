version: '3.8'

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.Dockerfile
    restart: always
    ports:
      - "8000:8000"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    build:
      context: ./../mail-service
      dockerfile: ../mail-service/mail-service.Dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com
      
  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.Dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/sqlite/:/db
    environment:
      DSN: ./db/authusers.db

  listener-service:
    build:
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.Dockerfile
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

#  sqlite:
#    image: hibitdev/sqlite:latest
#    container_name: sqlite
#    ports:
#      - "8191:8191"
#    volumes:
#      - ./db-data/sqlite/:/db
#    command: ["tail", "-f", "/dev/null"]  # Keeps the container running